{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Animatable from 'react-native-animatable';\nimport { AuthContext } from \"../App\";\nimport jwt_decode from \"jwt-decode\";\nimport { Header } from 'react-native-elements';\nimport { ContainerScroll, Container, ContainerHeader, ContainerItemStory, ContainerPhoto, Photo, Name, PostPhoto, ContainerActions, ContainerActionsIcons, GroupIcons, Label } from \"../Components/Posts/styles\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var token = state.token;\n  var decoded = jwt_decode(token);\n  var user_id = decoded;\n\n  var _React$useState = React.useState({\n    color: '#333',\n    size: 20,\n    style: {\n      paddingRight: 15\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      iconsConfigure = _React$useState2[0];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      posts = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var fetch_posts = function fetch_posts() {\n    fetch(\"http://e17986b06e50.ngrok.io/code_reservoir/fetch_posts.php\", {\n      method: \"GET\",\n      \"Content-Type\": \"application/json\",\n      headers: {\n        Authorization: \"Bearer \" + state.token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setState(data);\n    });\n  };\n\n  var like = function like(id) {\n    var newPost, data;\n    return _regeneratorRuntime.async(function like$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newPost = posts.map(function (p) {\n              return p.p_id === id ? _objectSpread(_objectSpread({}, p), {}, {\n                post_liker: user_id,\n                total_likes: p.total_likes + 1\n              }) : p;\n            });\n            setState(newPost);\n            data = new FormData();\n            data.append(\"post_id\", id);\n            data.append(\"token\", state.token);\n            fetch(\"http://e17986b06e50.ngrok.io/code_reservoir/like_post.php\", {\n              method: \"POST\",\n              body: data\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              return console.log(data.message);\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var unlike = function unlike(e, id) {\n    var newPost, data;\n    return _regeneratorRuntime.async(function unlike$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newPost = posts.map(function (p) {\n              return p.p_id === id ? _objectSpread(_objectSpread({}, p), {}, {\n                post_liker: null,\n                total_likes: p.total_likes - 1\n              }) : p;\n            });\n            setState(newPost);\n            data = new FormData();\n            data.append(\"post_id\", id);\n            data.append(\"token\", state.token);\n            fetch(\"http://e17986b06e50.ngrok.io/code_reservoir/unlike_post.php\", {\n              method: \"POST\",\n              body: data\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    fetch_posts();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    placement: \"left\",\n    leftComponent: React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        fontStyle: \"italic\",\n        fontWeight: \"bold\",\n        color: \"rgb(95, 32, 155)\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"Codereservoir\"),\n    rightComponent: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"ChatSection\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, React.createElement(Icon, {\n      name: \"chatbox-outline\",\n      size: 25,\n      color: \"rgb(95, 32, 155)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 86\n      }\n    })),\n    containerStyle: {\n      backgroundColor: '#fff',\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }), React.createElement(ContainerScroll, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, posts.map(function (post, index) {\n    return React.createElement(Container, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, React.createElement(ContainerHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, React.createElement(ContainerItemStory, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, React.createElement(ContainerPhoto, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, React.createElement(Photo, {\n      source: {\n        uri: \"http://e17986b06e50.ngrok.io/code_reservoir/\" + post.user_img\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    })), React.createElement(Name, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, post.full_name)), React.createElement(FontAwesome5, {\n      name: \"ellipsis-h\",\n      size: 14,\n      color: \"#888\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 14\n      }\n    })), React.createElement(PostPhoto, {\n      source: {\n        uri: \"http://e17986b06e50.ngrok.io/code_reservoir/\" + post.post_media\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }), React.createElement(ContainerActions, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, React.createElement(ContainerActionsIcons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, React.createElement(GroupIcons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, post.post_liker === null ? React.createElement(TouchableOpacity, {\n      onPress: function onPress(e) {\n        return like(post.p_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"heart-outline\",\n      size: 25,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    })) : React.createElement(TouchableOpacity, {\n      onPress: function onPress(e) {\n        return unlike(e, post.p_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      color: \"red\",\n      size: 25,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 18\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        marginLeft: 10,\n        marginTop: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, React.createElement(FontAwesome5, _extends({\n      name: \"comment\"\n    }, iconsConfigure, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 16\n      }\n    })))), React.createElement(FontAwesome5, _extends({\n      name: \"bookmark\"\n    }, iconsConfigure, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }))), React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, post.total_likes, \" Likes\"), React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, post.post_caption)));\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/Home.js"],"names":["React","Animatable","AuthContext","jwt_decode","Header","ContainerScroll","Container","ContainerHeader","ContainerItemStory","ContainerPhoto","Photo","Name","PostPhoto","ContainerActions","ContainerActionsIcons","GroupIcons","Label","FontAwesome5","Icon","Home","navigation","useContext","state","dispatch","token","decoded","user_id","useState","color","size","style","paddingRight","iconsConfigure","posts","setState","fetch_posts","fetch","method","headers","Authorization","then","res","json","data","like","id","newPost","map","p","p_id","post_liker","total_likes","FormData","append","body","console","log","message","unlike","e","useEffect","flex","fontSize","fontStyle","fontWeight","navigate","backgroundColor","height","post","index","uri","user_img","full_name","post_media","marginLeft","marginTop","post_caption"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Text,View,\n  Image,\n  TouchableOpacity\n}from 'react-native';\n\nimport * as Animatable from 'react-native-animatable'\nimport {AuthContext} from '../App';\nimport jwt_decode from \"jwt-decode\";\nimport {Header} from 'react-native-elements';\n\n\nimport {\n  ContainerScroll,\n  Container,\n  ContainerHeader,\n  ContainerItemStory,\n  ContainerPhoto,\n  Photo,\n  Name,\n  PostPhoto,\n  ContainerActions,\n  ContainerActionsIcons,\n  GroupIcons,\n  Label\n} from '../Components/Posts/styles';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\n\n\n\n\n\n\nconst Home=({navigation})=>{\n\n\nconst {state,dispatch}=React.useContext(AuthContext);\n\n \nconst token = state.token;\nconst decoded = jwt_decode(token);\nconst user_id=decoded;\n\n\nconst [iconsConfigure] = React.useState({\n    color: '#333',\n    size: 20,\n    style: {\n      paddingRight: 15\n    }\n  });\n\nconst [posts,setState]=React.useState([])\n\n\n\nconst fetch_posts=()=>{\n  fetch(\"http://e17986b06e50.ngrok.io/code_reservoir/fetch_posts.php\",\n  {\n    method:\"GET\",\n    \"Content-Type\":\"application/json\",\n    headers:{\n      Authorization:`Bearer ${state.token}`\n   }\n  }\n  )\n  .then(res=>res.json())\n  .then(data=>{\n    setState(\n      data\n    )\n  })//.catch(err=>alert(err));\n}\n\nconst like=async(id)=>{\nconst newPost= posts.map(\n  p=>p.p_id===id?{...p,post_liker:user_id,total_likes:p.total_likes+1}:p\n  );\n\n  setState(newPost);\n  \n  const data=new FormData();\n  data.append(\"post_id\",id);\n  data.append(\"token\",state.token);\n\n   fetch(\"http://e17986b06e50.ngrok.io/code_reservoir/like_post.php\",\n   {\n       method:\"POST\",\n       body:data,\n       //headers: {\n       //  'Content-Type': 'multipart/form-data'\n       //}\n   }\n   )\n   .then(res=>res.json())\n   .then(data=>console.log(data.message))\n   //.catch(err=>alert(err))\n\n   \n\n \n  \n}\n\n\nconst unlike=async(e,id)=>{\n  const newPost= posts.map(\n    p=>p.p_id===id?{...p,post_liker:null,total_likes:p.total_likes-1}:p\n    );\n  \n    setState(newPost);\n\n    const data=new FormData();\n  data.append(\"post_id\",id);\n  data.append(\"token\",state.token);\n\n   fetch(\"http://e17986b06e50.ngrok.io/code_reservoir/unlike_post.php\",\n   {\n       method:\"POST\",\n       body:data,\n       //headers: {\n       //  'Content-Type': 'multipart/form-data'\n       //}\n   }\n   )\n   .then(res=>res.json())\n  // .then(data=>alert(data.message))\n  // .catch(err=>alert(err))\n    \n    \n  }\n\n\n\nReact.useEffect(()=>{\nfetch_posts();\n\n},[])\n  return(\n    <View style={{flex:1}}>\n    <Header\n  placement=\"left\"\n  leftComponent= {<Text style={{fontSize:20,fontStyle:\"italic\",fontWeight:\"bold\",color:\"rgb(95, 32, 155)\"}}>Codereservoir</Text>}\n  rightComponent={<TouchableOpacity onPress={()=>navigation.navigate(\"ChatSection\")}><Icon name=\"chatbox-outline\"\n  size={25} color=\"rgb(95, 32, 155)\"/></TouchableOpacity>}\n  containerStyle={{\n    backgroundColor: '#fff',\n    //justifyContent: 'space-around',\n    height:100\n  }}\n/>\n    <ContainerScroll>\n    \n      {  posts.map((post, index) => (\n        <Container key={index}>\n          <ContainerHeader>\n              <ContainerItemStory>\n                <ContainerPhoto>\n                  <Photo source={{ uri:`http://e17986b06e50.ngrok.io/code_reservoir/${post.user_img}` }} />\n                </ContainerPhoto>\n                <Name>{post.full_name}</Name>\n              </ContainerItemStory>\n             <FontAwesome5 name=\"ellipsis-h\" size={14} color=\"#888\" />\n          </ContainerHeader>\n          <PostPhoto source={{ uri:`http://e17986b06e50.ngrok.io/code_reservoir/${post.post_media}` }} />\n          <ContainerActions>\n            <ContainerActionsIcons>\n              <GroupIcons>\n             \n              {post.post_liker===null?\n                <TouchableOpacity onPress={e=>like(post.p_id)}>\n                  <Icon name=\"heart-outline\" size={25}  color=\"black\" />\n                </TouchableOpacity>:\n                <TouchableOpacity onPress={e=>unlike(e,post.p_id)}>\n                 <Icon name=\"heart\"  color=\"red\" size={25} />\n              </TouchableOpacity>}\n              <TouchableOpacity style={{marginLeft:10,marginTop:2}}>\n               <FontAwesome5 name=\"comment\" {...iconsConfigure} />\n               </TouchableOpacity> \n                \n              </GroupIcons>\n              <FontAwesome5 name=\"bookmark\" {...iconsConfigure} />\n            </ContainerActionsIcons>\n            <Label>{post.total_likes} Likes</Label>\n            <Label>{post.post_caption}</Label>\n          </ContainerActions>\n        </Container>\n      )) }\n    </ContainerScroll>\n    </View>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}