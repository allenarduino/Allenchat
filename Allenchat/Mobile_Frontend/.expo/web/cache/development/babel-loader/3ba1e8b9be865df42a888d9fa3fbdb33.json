{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/node_modules/react-navigation-header-buttons/src/overflowMenu/vendor/Menu.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nvar APPROX_STATUSBAR_HEIGHT = 25;\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\nvar EASING = Easing.bezier(0.4, 0, 0.2, 1);\nexport var Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new Animated.Value(0),\n      scaleAnimation: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    };\n    _this.anchor = null;\n    _this.menu = null;\n\n    _this.isAnchorCoord = function () {\n      return !React.isValidElement(_this.props.anchor);\n    };\n\n    _this.measureMenuLayout = function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this.measureAnchorLayout = function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isAnchorCoord()) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this.updateVisibility = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.isBrowser = function () {\n      return Platform.OS === 'web' && 'document' in global;\n    };\n\n    _this.focusFirstDOMNode = function (el) {\n      if (el && _this.isBrowser()) {\n        var node = findNodeHandle(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode == null ? void 0 : focusableNode.focus();\n      }\n    };\n\n    _this.handleDismiss = function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    };\n\n    _this.handleKeypress = function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    };\n\n    _this.attachListeners = function () {\n      BackHandler.addEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.addEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    };\n\n    _this.removeListeners = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.removeEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    };\n\n    _this.show = function _callee2() {\n      var windowLayout, _ref, _ref2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = Dimensions.get('window');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _ref = _context2.sent;\n              _ref2 = _slicedToArray(_ref, 2);\n              menuLayout = _ref2[0];\n              anchorLayout = _ref2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isAnchorCoord() || !anchorLayout.height && !_this.isAnchorCoord())) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var _animation = {\n                  animation: {\n                    scale: 1.0\n                  }\n                },\n                    animation = _animation.animation;\n                Animated.parallel([Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref3) {\n                  var finished = _ref3.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.hide = function () {\n      _this.removeListeners();\n\n      var _animation2 = {\n        animation: {\n          scale: 1.0\n        }\n      },\n          animation = _animation2.animation;\n      Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (_ref4) {\n        var finished = _ref4.finished;\n\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            },\n            rendered: false\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss,\n          overlayAccessibilityLabel = _this$props.overlayAccessibilityLabel;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      var additionalVerticalValue = Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n      var windowLayout = Dimensions.get('window');\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: 5\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isAnchorCoord() ? top : top + additionalVerticalValue\n      }, I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return rendered ? React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        collapsable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        accessibilityLabel: overlayAccessibilityLabel,\n        accessibilityRole: \"button\",\n        onPress: onDismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        ref: function ref(_ref5) {\n          _this2.menu = _ref5;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        onAccessibilityEscape: onDismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.shadowMenuContainer, styles.surface, shadowMenuContainerStyle, contentStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }\n      }, scrollableMenuHeight && React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 41\n        }\n      }, children) || React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 17\n        }\n      }, children))))) : null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\nMenu.defaultProps = {\n  statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  overlayAccessibilityLabel: 'Close menu'\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: _objectSpread({\n    opacity: 0,\n    paddingVertical: 8\n  }, Platform.select({\n    android: {\n      elevation: 8\n    },\n    default: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: 7\n      },\n      shadowOpacity: 0.24,\n      shadowRadius: 8\n    }\n  })),\n  surface: {\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/node_modules/react-navigation-header-buttons/src/overflowMenu/vendor/Menu.js"],"names":["React","APPROX_STATUSBAR_HEIGHT","SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","bezier","Menu","state","rendered","props","visible","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","Value","scaleAnimation","ValueXY","x","y","anchor","menu","isAnchorCoord","isValidElement","measureMenuLayout","Promise","resolve","measureInWindow","measureAnchorLayout","updateVisibility","show","hide","isBrowser","Platform","OS","global","focusFirstDOMNode","el","node","findNodeHandle","focusableNode","querySelector","focus","handleDismiss","onDismiss","handleKeypress","e","key","attachListeners","BackHandler","addEventListener","Dimensions","document","removeListeners","removeEventListener","windowLayout","get","all","requestAnimationFrame","setState","animation","scale","parallel","timing","toValue","duration","easing","useNativeDriver","start","finished","setValue","prevProps","contentStyle","style","children","statusBarHeight","overlayAccessibilityLabel","additionalVerticalValue","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","positionStyle","I18nManager","isRTL","StyleSheet","absoluteFill","ref","styles","wrapper","shadowMenuContainer","surface","nextProps","prevState","Component","defaultProps","create","position","paddingVertical","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","backgroundColor"],"mappings":"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","sourcesContent":["// @flow\n// menu has a bunch of errors so typecheck is ignored but we want to keep flow syntax in here\n\nimport * as React from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  TouchableWithoutFeedback,\n  View,\n  ScrollView,\n  findNodeHandle,\n} from 'react-native';\n\nimport type { ViewStyleProp as ViewStyle } from 'react-native/Libraries/StyleSheet/StyleSheet';\ntype LayoutRectangle = { x: number, y: number, width: number, height: number };\n\n// NOTE this is ignored in our case bcs of this.isAnchorCoord() condition\nconst APPROX_STATUSBAR_HEIGHT = 25;\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean,\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.Node | { x: number, y: number },\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number,\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void,\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the menu.\n   */\n  overlayAccessibilityLabel?: string,\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.Node,\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: ViewStyle,\n  style?: ViewStyle,\n};\n\ntype Layout = { width: number, height: number };\n\ntype State = {\n  rendered: boolean,\n  top: number,\n  left: number,\n  menuLayout: Layout,\n  anchorLayout: Layout,\n  opacityAnimation: Animated.Value,\n  scaleAnimation: Animated.ValueXY,\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nexport class Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  //   static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n    overlayAccessibilityLabel: 'Close menu',\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  anchor: typeof View | null = null;\n  menu: typeof View | null = null;\n\n  isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n\n  measureMenuLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      if (this.menu) {\n        // $FlowFixMe\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      const { anchor } = this.props;\n      if (this.isAnchorCoord()) {\n        // $FlowFixMe\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        // $FlowFixMe\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  focusFirstDOMNode = (el: typeof View | null | typeof undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      // $FlowFixMe\n      focusableNode?.focus();\n    }\n  };\n\n  handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.addEventListener('change', this.handleDismiss);\n\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.removeEventListener('change', this.handleDismiss);\n\n    this.isBrowser() && document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isAnchorCoord()) ||\n      (!anchorLayout.height && !this.isAnchorCoord())\n    ) {\n      // $FlowFixMe\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = {\n          animation: {\n            scale: 1.0,\n          },\n        };\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  hide = () => {\n    this.removeListeners();\n\n    const { animation } = {\n      animation: {\n        scale: 1.0,\n      },\n    };\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      contentStyle,\n      style,\n      children,\n      statusBarHeight,\n      onDismiss,\n      overlayAccessibilityLabel,\n    } = this.props;\n    const { rendered, menuLayout, anchorLayout, opacityAnimation, scaleAnimation } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          // $FlowFixMe\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          // $FlowFixMe\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          // $FlowFixMe\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          // $FlowFixMe\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          // $FlowFixMe\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          // $FlowFixMe\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: 5,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n    return rendered ? (\n      <View style={StyleSheet.absoluteFill} collapsable={false}>\n        <TouchableWithoutFeedback\n          accessibilityLabel={overlayAccessibilityLabel}\n          accessibilityRole=\"button\"\n          onPress={onDismiss}\n        >\n          <View style={StyleSheet.absoluteFill} />\n        </TouchableWithoutFeedback>\n        <View\n          ref={(ref) => {\n            this.menu = ref;\n          }}\n          collapsable={false}\n          accessibilityViewIsModal={visible}\n          style={[styles.wrapper, positionStyle, style]}\n          pointerEvents={visible ? 'box-none' : 'none'}\n          onAccessibilityEscape={onDismiss}\n        >\n          <Animated.View style={{ transform: positionTransforms }}>\n            <Animated.View\n              style={[\n                styles.shadowMenuContainer,\n                styles.surface,\n                shadowMenuContainerStyle,\n                contentStyle,\n              ]}\n            >\n              {(scrollableMenuHeight && <ScrollView>{children}</ScrollView>) || (\n                <React.Fragment>{children}</React.Fragment>\n              )}\n            </Animated.View>\n          </Animated.View>\n        </View>\n      </View>\n    ) : null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    ...Platform.select({\n      android: {\n        elevation: 8,\n      },\n      default: {\n        shadowColor: 'black',\n        shadowOffset: {\n          width: 0,\n          height: 7,\n        },\n        shadowOpacity: 0.24,\n        shadowRadius: 8,\n      },\n    }),\n  },\n  surface: {\n    backgroundColor: 'white',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}