{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/node_modules/react-navigation-header-buttons/src/overflowMenu/vendor/MenuItem.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableItem from \"../../TouchableItem\";\nimport { useTheme } from '@react-navigation/native';\nexport function MenuItem(props) {\n  var icon = props.icon,\n      title = props.title,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      style = props.style,\n      titleStyle = props.titleStyle,\n      testID = props.testID;\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      text = _useTheme.colors.text;\n\n  var disabledColor = dark ? styles.darkDisabled : styles.lightDisabled;\n  var titleColor = disabled ? disabledColor : {\n    color: text\n  };\n  var themePressColorAndroid = dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n  return React.createElement(TouchableItem, {\n    style: [styles.container, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    pressColor: themePressColorAndroid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.isValidElement(icon) && React.createElement(View, {\n    style: [styles.item, styles.icon],\n    pointerEvents: \"box-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, icon), React.createElement(View, {\n    style: [styles.item, styles.content, icon != null ? styles.widthWithIcon : undefined],\n    pointerEvents: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.title, titleColor, titleStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, title))));\n}\nvar minWidth = 112;\nvar maxWidth = 280;\nvar iconWidth = 25;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: 48,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  },\n  lightDisabled: {\n    color: 'rgba(0, 0, 0, 0.32)'\n  },\n  darkDisabled: {\n    color: 'rgba(255, 255, 255, 0.32)'\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/node_modules/react-navigation-header-buttons/src/overflowMenu/vendor/MenuItem.js"],"names":["React","TouchableItem","useTheme","MenuItem","props","icon","title","disabled","onPress","style","titleStyle","testID","dark","text","colors","disabledColor","styles","darkDisabled","lightDisabled","titleColor","color","themePressColorAndroid","container","row","isValidElement","item","content","widthWithIcon","undefined","minWidth","maxWidth","iconWidth","StyleSheet","create","paddingHorizontal","height","justifyContent","flexDirection","width","fontSize","marginHorizontal"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAOC,aAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAiCA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAgE;AAAA,MAC7DC,IAD6D,GACCD,KADD,CAC7DC,IAD6D;AAAA,MACvDC,KADuD,GACCF,KADD,CACvDE,KADuD;AAAA,MAChDC,QADgD,GACCH,KADD,CAChDG,QADgD;AAAA,MACtCC,OADsC,GACCJ,KADD,CACtCI,OADsC;AAAA,MAC7BC,KAD6B,GACCL,KADD,CAC7BK,KAD6B;AAAA,MACtBC,UADsB,GACCN,KADD,CACtBM,UADsB;AAAA,MACVC,MADU,GACCP,KADD,CACVO,MADU;;AAAA,kBAMjET,QAAQ,EANyD;AAAA,MAInEU,IAJmE,aAInEA,IAJmE;AAAA,MAKzDC,IALyD,aAKnEC,MALmE,CAKzDD,IALyD;;AAQrE,MAAME,aAAa,GAAGH,IAAI,GAAGI,MAAM,CAACC,YAAV,GAAyBD,MAAM,CAACE,aAA1D;AACA,MAAMC,UAAU,GAAGZ,QAAQ,GAAGQ,aAAH,GAAmB;AAAEK,IAAAA,KAAK,EAAEP;AAAT,GAA9C;AACA,MAAMQ,sBAAsB,GAAGT,IAAI,GAAG,0BAAH,GAAgC,oBAAnE;AAEA,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,CAACI,MAAM,CAACM,SAAR,EAAmBb,KAAnB,CADT;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,MAAM,EAAEI,MAJV;AAKE,IAAA,UAAU,EAAEU,sBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACO,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,KAAK,CAACwB,cAAN,CAAqBnB,IAArB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACW,MAAM,CAACS,IAAR,EAAcT,MAAM,CAACX,IAArB,CAAb;AAAyC,IAAA,aAAa,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CAFJ,EAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACW,MAAM,CAACS,IAAR,EAAcT,MAAM,CAACU,OAArB,EAA8BrB,IAAI,IAAI,IAAR,GAAeW,MAAM,CAACW,aAAtB,GAAsCC,SAApE,CADT;AAEE,IAAA,aAAa,EAAC,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,KAAlB;AAAyB,IAAA,aAAa,EAAE,CAAxC;AAA2C,IAAA,KAAK,EAAE,CAACZ,MAAM,CAACV,KAAR,EAAea,UAAf,EAA2BT,UAA3B,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,CAJF,CANF,CAPF,CADF;AAyBD;AAED,IAAMuB,QAAQ,GAAG,GAAjB;AACA,IAAMC,QAAQ,GAAG,GAAjB;AACA,IAAMC,SAAS,GAAG,EAAlB;AAEA,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,iBAAiB,EAAE,CADV;AAETL,IAAAA,QAAQ,EAARA,QAFS;AAGTC,IAAAA,QAAQ,EAARA,QAHS;AAITK,IAAAA,MAAM,EAAE,EAJC;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/Bb,EAAAA,GAAG,EAAE;AACHc,IAAAA,aAAa,EAAE;AADZ,GAR0B;AAW/BhC,EAAAA,IAAI,EAAE;AACJiC,IAAAA,KAAK,EAAEP;AADH,GAXyB;AAc/BzB,EAAAA,KAAK,EAAE;AACLiC,IAAAA,QAAQ,EAAE;AADL,GAdwB;AAiB/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,gBAAgB,EAAE;AADd,GAjByB;AAoB/Bd,EAAAA,OAAO,EAAE;AACPU,IAAAA,cAAc,EAAE,QADT;AAEPP,IAAAA,QAAQ,EAAEA,QAAQ,GAAG,EAFd;AAGPC,IAAAA,QAAQ,EAAEA,QAAQ,GAAG;AAHd,GApBsB;AAyB/BH,EAAAA,aAAa,EAAE;AACbG,IAAAA,QAAQ,EAAEA,QAAQ,IAAIC,SAAS,GAAG,EAAhB;AADL,GAzBgB;AA4B/Bb,EAAAA,aAAa,EAAE;AACbE,IAAAA,KAAK,EAAE;AADM,GA5BgB;AA+B/BH,EAAAA,YAAY,EAAE;AACZG,IAAAA,KAAK,EAAE;AADK;AA/BiB,CAAlB,CAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport TouchableItem from '../../TouchableItem';\nimport { useTheme } from '@react-navigation/native';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: string,\n  /**\n   * Icon to display for the `MenuItem`.\n   */\n  icon?: ?React.Node,\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean,\n  /**\n   * Function to execute on press.\n   */\n  onPress: ?() => any,\n  /**\n   * @optional\n   */\n  style?: ViewStyleProp,\n  titleStyle?: ViewStyleProp,\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string,\n};\n\n/**\n * A component to show a single list item inside a Menu.\n */\nexport function MenuItem(props: Props): React.Element<typeof MenuItem> {\n  const { icon, title, disabled, onPress, style, titleStyle, testID } = props;\n\n  const {\n    dark,\n    colors: { text },\n  } = useTheme();\n\n  const disabledColor = dark ? styles.darkDisabled : styles.lightDisabled;\n  const titleColor = disabled ? disabledColor : { color: text };\n  const themePressColorAndroid = dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  return (\n    <TouchableItem\n      style={[styles.container, style]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      pressColor={themePressColorAndroid}\n    >\n      <View style={styles.row}>\n        {React.isValidElement(icon) && (\n          <View style={[styles.item, styles.icon]} pointerEvents=\"box-none\">\n            {icon}\n          </View>\n        )}\n        <View\n          style={[styles.item, styles.content, icon != null ? styles.widthWithIcon : undefined]}\n          pointerEvents=\"none\"\n        >\n          <Text selectable={false} numberOfLines={1} style={[styles.title, titleColor, titleStyle]}>\n            {title}\n          </Text>\n        </View>\n      </View>\n    </TouchableItem>\n  );\n}\n\nconst minWidth = 112;\nconst maxWidth = 280;\nconst iconWidth = 25;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth,\n    maxWidth,\n    height: 48,\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  icon: {\n    width: iconWidth,\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16,\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48),\n  },\n  lightDisabled: {\n    color: 'rgba(0, 0, 0, 0.32)',\n  },\n  darkDisabled: {\n    color: 'rgba(255, 255, 255, 0.32)',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}