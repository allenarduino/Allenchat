{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/SignupScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BottomTab from \"../Navigation/BottomNav\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport SwitchNav from \"../Navigation/SwitchNavOne\";\nimport { AppStyles } from \"../AppStyles\";\nvar validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nvar SignupScreen = function (_React$Component) {\n  _inherits(SignupScreen, _React$Component);\n\n  var _super = _createSuper(SignupScreen);\n\n  function SignupScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignupScreen);\n\n    _this = _super.call(this, props);\n\n    _this.nameInputChange = function (val) {\n      if (val.trim().length >= 6) {\n        _this.setState({\n          name_is_valid: true,\n          form_is_valid: true\n        });\n      } else {\n        _this.setState({\n          name_is_valid: false,\n          form_is_valid: false\n        });\n      }\n    };\n\n    _this.emailInputchange = function (val) {\n      if (validEmailRegex.test(val)) {\n        _this.setState({\n          email_is_valid: true\n        });\n      } else {\n        _this.setState({\n          email_is_valid: false\n        });\n      }\n    };\n\n    _this.passwordInputchange = function (val) {\n      if (val.trim().length >= 6) {\n        _this.setState({\n          password_is_valid: true\n        });\n      } else {\n        _this.setState({\n          password_is_valid: false\n        });\n      }\n    };\n\n    _this.signup = function () {\n      var data = new FormData();\n      data.append(\"name\", _this.state.name);\n      data.append(\"email\", _this.state.email);\n      data.append(\"password\", _this.state.password);\n\n      if (_this.state.name_is_valid == true && _this.state.email_is_valid == true && _this.state.password_is_valid == true && !_this.state.name.trim().length == 0 && !_this.state.email.trim().length == 0 && !_this.state.password.trim().length == 0) {\n        fetch(\"https://e7f46440712b.ngrok.io/code_reservoir/customer_signup.php\", {\n          method: \"POST\",\n          body: data\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          _this.setState({\n            loading: false\n          });\n\n          if (data.error == null) {\n            alert(data.message);\n\n            _this.props.navigation.navigate(\"LoginScreen\");\n          } else {\n            _this.setState({\n              error: !_this.state.error\n            });\n          }\n        }).catch(function (err) {\n          alert(err);\n        });\n      } else {\n        alert(\"Form is invalid\");\n      }\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      name_is_valid: true,\n      email_is_valid: true,\n      password_is_valid: true,\n      form_is_valid: true,\n      error: false,\n      message: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignupScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, styles.leftTitle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, \"Sign Up\"), React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(name) {\n          _this2.nameInputChange(name);\n\n          _this2.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      })), this.state.name_is_valid == false ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 43\n        }\n      }, \"Name must not be less than 6 characters\") : null, React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        placeholder: \"Email \",\n        onChangeText: function onChangeText(email) {\n          _this2.emailInputchange(email);\n\n          _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      })), this.state.error == true ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, \"User with email already exists\") : null, this.state.email_is_valid == false ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 44\n        }\n      }, \"Please your email is not valid\") : null, React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          _this2.passwordInputchange(password);\n\n          _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      })), this.state.password_is_valid == false ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 46\n        }\n      }, \"Password must not be less than 6 characters\") : null, React.createElement(TouchableOpacity, {\n        style: styles.loginContainer,\n        onPress: this.signup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, \"Sign up\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginTop: 20\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"LoginScreen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"rgb(95, 32, 155)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 10\n        }\n      }, \"Already a member?\")));\n    }\n  }]);\n\n  return SignupScreen;\n}(React.Component);\n\nexport default SignupScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  myButton: {\n    backgroundColor: \"red\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: AppStyles.color.white,\n    fontSize: 15\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/SignupScreen.js"],"names":["React","BottomTab","AsyncStorage","SwitchNav","AppStyles","validEmailRegex","RegExp","SignupScreen","props","nameInputChange","val","trim","length","setState","name_is_valid","form_is_valid","emailInputchange","test","email_is_valid","passwordInputchange","password_is_valid","signup","data","FormData","append","state","name","email","password","fetch","method","body","then","res","json","loading","error","alert","message","navigation","navigate","catch","err","styles","container","title","leftTitle","InputContainer","color","grey","fontSize","loginContainer","loginText","marginTop","Component","StyleSheet","create","flex","alignItems","or","fontFamily","fontName","main","marginBottom","fontWeight","tint","alignSelf","textAlign","marginLeft","content","paddingLeft","paddingRight","text","myButton","backgroundColor","width","buttonWidth","borderRadius","padding","white","placeholder","textInputWidth","borderWidth","borderStyle","borderColor","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\nTouchableOpacity,\nText,\nView,\nStyleSheet,\nTextInput,\n\n\n} from 'react-native';\nimport BottomTab from '../Navigation/BottomNav';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport SwitchNav from '../Navigation/SwitchNavOne';\nimport { AppStyles}  from \"../AppStyles\";\n\n\n\n\n\n//I'm using this for email validation\nconst validEmailRegex= \nRegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n\n\n\nclass SignupScreen extends React.Component{\n\n\n\n  constructor(props){\n    super(props);\n    this.state={\n        name:\"\",\n        email:\"\",\n        password:\"\",\n        name_is_valid:true,\n        email_is_valid:true,\n        password_is_valid:true,\n        form_is_valid:true,\n        error:false,//Error  from server is false\n        message:\"\",//Success message from server\n        \n      \n    }\n}\n\n  \n\n\nnameInputChange=(val)=>{\n  if(val.trim().length>=6){\n      this.setState({\n          name_is_valid:true,\n          form_is_valid:true\n\n      })\n    }\n    else{\n        this.setState({\n            name_is_valid:false,\n            form_is_valid:false,\n        })\n    }\n}\n\nemailInputchange=(val)=>{\n  if(validEmailRegex.test(val)){\n      this.setState({\n          email_is_valid:true,\n      });\n      \n  }\n  else{\n      this.setState({\n          email_is_valid:false,\n      })\n  }\n\n}\n\npasswordInputchange=(val)=>{\n  if(val.trim().length>=6){\n      this.setState({\n          password_is_valid:true,\n      });\n      \n  }\n  else{\n      this.setState({\n          password_is_valid:false,\n      })\n  }\n\n}\n\n\n\nsignup=()=>{\n  const data=new FormData();\n  data.append(\"name\",this.state.name)\n  data.append(\"email\",this.state.email)\n  data.append(\"password\",this.state.password)\n\n  if(\n      this.state.name_is_valid==true&&this.state.email_is_valid==true&&this.state.password_is_valid==true&&\n      !this.state.name.trim().length==0&&!this.state.email.trim().length==0&&!this.state.password.trim().length==0){\n\n  fetch(\"https://e7f46440712b.ngrok.io/code_reservoir/customer_signup.php\",\n{\n    method:\"POST\",\n    body:data\n   \n\n})\n.then(res=>res.json())\n.then(data=>{\n    this.setState({\n        loading:false\n    })\n    \n    if (data.error==null){\n        alert(data.message);\n        this.props.navigation.navigate(\"LoginScreen\");\n      \n    }\n    else{\n        this.setState({error:!this.state.error})\n    }\n}).catch((err)=>{alert(err)});\n}\nelse{\n  alert(\"Form is invalid\")\n}\n\n  \n}\n\nrender(){\n    return(\n        <View style={styles.container}>\n        <Text style={[styles.title, styles.leftTitle]}>Sign Up</Text>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"Name\"\n            onChangeText={(name)=>{this.nameInputChange(name);this.setState({name})}}\n            value={this.state.name}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {this.state.name_is_valid==false? <Text style={{color:\"red\",fontSize:14}}>Name must not be less than 6 characters</Text>:null}\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"Email \"\n            onChangeText={(email)=>{this.emailInputchange(email);this.setState({email})}}\n            value={this.state.email}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {this.state.error==true?<Text style={{color:\"red\",fontSize:14}}>User with email already exists</Text>:null}\n\n        {this.state.email_is_valid==false? <Text style={{color:\"red\",fontSize:14}}>Please your email is not valid</Text>:null}\n \n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            secureTextEntry={true}\n            placeholder=\"Password\"\n            onChangeText={(password)=>{this.passwordInputchange(password);this.setState({password})}}\n            value={this.state.password}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {this.state.password_is_valid==false?<Text style={{color:\"red\",fontSize:14}}>Password must not be less than 6 characters</Text>:null}\n        <TouchableOpacity style={styles.loginContainer} onPress={this.signup}>\n          <Text style={styles.loginText}>Sign up</Text>\n        </TouchableOpacity>\n     <TouchableOpacity style={{marginTop:20}} onPress={()=>this.props.navigation.navigate(\"LoginScreen\")}>\n         <Text style={{color:\"rgb(95, 32, 155)\"}}>Already a member?</Text>\n     </TouchableOpacity>\n      </View>\n    )\n}\n}\n\nexport default SignupScreen;\n\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    or: {\n      fontFamily: AppStyles.fontName.main,\n      color: \"black\",\n      marginTop: 40,\n      marginBottom: 10\n    },\n    title: {\n      fontSize: AppStyles.fontSize.title,\n      fontWeight: \"bold\",\n      color: AppStyles.color.tint,\n      marginTop: 50,\n      marginBottom: 20\n    },\n    leftTitle: {\n      alignSelf: \"stretch\",\n      textAlign: \"left\",\n      marginLeft: 20\n    },\n    content: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      textAlign: \"center\",\n      fontSize: AppStyles.fontSize.content,\n      color: AppStyles.color.text\n    },\n    myButton:{\n      backgroundColor:\"red\"\n    },\n    loginContainer: {\n      width: AppStyles.buttonWidth.main,\n      backgroundColor: AppStyles.color.tint,\n      borderRadius: AppStyles.borderRadius.main,\n      padding: 10,\n      marginTop: 30,\n      alignItems:\"center\",\n    },\n    loginText: {\n      color: AppStyles.color.white,\n      fontSize:15\n    },\n    placeholder: {\n      fontFamily: AppStyles.fontName.text,\n      color: \"red\"\n    },\n    InputContainer: {\n      width: AppStyles.textInputWidth.main,\n      marginTop: 30,\n      borderWidth: 1,\n      borderStyle: \"solid\",\n      borderColor: AppStyles.color.grey,\n      borderRadius: AppStyles.borderRadius.main\n    },\n    body: {\n      height: 42,\n      paddingLeft: 20,\n      paddingRight: 20,\n      color: AppStyles.color.text\n    },\n   \n  });\n\n/*\nconst mapStateToProps = (state) => {\n    return { token: state.token,}\n };\n\n  \n\nconst mapDispatchToProps = dispatch => ({\n    login:dispatch(login)\n});\n\n export default connect(mapStateToProps,mapDispatchToProps)(Login);\n*/"]},"metadata":{},"sourceType":"module"}