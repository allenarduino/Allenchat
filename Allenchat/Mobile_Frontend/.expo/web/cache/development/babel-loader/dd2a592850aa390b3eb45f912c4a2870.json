{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js\";\n\nimport { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport AddStack from \"../Navigation/AddStack\";\nvar MyContext = React.createContext();\n\nvar NewPostScreen = function NewPostScreen(_ref) {\n  var props = _ref.props,\n      route = _ref.route,\n      params = _ref.params;\n  var create_post = make_post;\n  var initialState = {\n    post_caption: \"\"\n  };\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var make_post = function make_post() {\n    alert(\"hey\");\n  };\n\n  var image = props.route.params.image.image;\n  return React.createElement(MyContext.Provider, {\n    value: {\n      create_post: create_post\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    placeholder: \"Write a Caption . . .\",\n    style: styles.input,\n    onChangeText: function onChangeText(post_caption) {\n      setState({\n        post_caption: post_caption\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), React.createElement(Image, {\n    source: {\n      uri: \"\" + props.route.params.image\n    },\n    style: styles.myImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.postContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }\n  }))));\n};\n\nexport default NewPostScreen;\nvar styles = StyleSheet.create({\n  myImage: {\n    height: 400,\n    width: \"100%\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    marginTop: 10\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js"],"names":["Ionicons","React","HeaderButtons","AddStack","MyContext","createContext","NewPostScreen","props","route","params","create_post","make_post","initialState","post_caption","useState","state","setState","alert","image","styles","input","uri","myImage","postContainer","StyleSheet","create","height","width","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingTop","fontSize","paddingLeft","myHeader","paddingBottom","backgroundColor","display","alignItems"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport { Image, TextInput, View,StyleSheet,ScrollView } from 'react-native';\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport AddStack from '../Navigation/AddStack';\n\n\n//import Fire from '../Fire';\nconst MyContext = React.createContext()\n\n\nconst NewPostScreen=({props,route,params})=>{\n\nconst create_post=make_post;\nconst initialState={\n  post_caption:\"\"\n}\n  const [state,setState]=React.useState(initialState);\n\n\nconst make_post=()=>{\n /*   const data=new FormData();\n    data.append(\"post_media\",this.props.route.params.image);\n    data.append(\"post_caption\",this.state.post_caption);\n\n    fetch(\"http://31f67e651a81.ngrok.io/code_reservoir/create_post.php\",\n    {\n        method:\"POST\",\n        'Content-Type' : 'application/json',\n        body:data\n    }\n    )\n    .then(res=>res.json())\n    .then(data=>alert(\"Image Uploaded\"))\n    .catch(err=>alert(err))*/\n    alert(\"hey\");\n   // alert(this.props.route.params.image)\n}\n\n  //state = { text: '' };\n\n    const { image } = props.route.params.image;\n    return (\n      <MyContext.Provider value={{create_post}}>\n      <ScrollView>\n    <View>\n    \n        <View>\n            <TextInput\n                multiline\n                placeholder=\"Write a Caption . . .\"\n                style={styles.input}\n                onChangeText={(post_caption)=>{setState({post_caption})}}\n            />\n            </View>\n        <Image source={{uri:`${props.route.params.image}`}} style={styles.myImage}/>\n             <View style={styles.postContainer}>\n          \n          </View>\n         \n      </View>\n\n      </ScrollView>\n      </MyContext.Provider>\n    );\n  }\n\n  export default NewPostScreen;\n\n\n\n\nconst styles=StyleSheet.create({\n  myImage:{\n     height:400,\n     width:\"100%\",\n     borderBottomLeftRadius:10,\n     borderBottomRightRadius:10,\n     marginTop:10\n\n  },\n  input:{\n      marginTop:100,\n      paddingTop:20,\n      fontSize:20,\n      paddingLeft:10\n  },\n\n  myHeader:{\n      width:\"100%\",\n      paddingTop:40,\n      paddingBottom:30,\n      backgroundColor:\"#fff\"\n  },\n \n\n    postContainer:{\n        display:\"flex\",\n        alignItems:\"center\"\n    }\n})\n"]},"metadata":{},"sourceType":"module"}