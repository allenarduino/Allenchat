{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/Save.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AppStyles } from \"../AppStyles\";\n\nvar Save = function (_React$Component) {\n  _inherits(Save, _React$Component);\n\n  var _super = _createSuper(Save);\n\n  function Save(props) {\n    var _this;\n\n    _classCallCheck(this, Save);\n\n    _this = _super.call(this, props);\n\n    _this.post = function () {\n      var data = new FormData();\n      data.append(\"post_media\", _this.props.route.params.image);\n      data.append(\"post_caption\", _this.state.post_caption);\n      fetch(\"http://31f67e651a81.ngrok.io/code_reservoir/create_post.php\", {\n        method: \"POST\",\n        'Content-Type': 'application/json',\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return alert(\"Image Uploaded\");\n      }).catch(function (err) {\n        return alert(err);\n      });\n    };\n\n    _this.state = {\n      post_caption: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Save, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Write a Caption . . .\",\n        style: styles.input,\n        onChangeText: function onChangeText(post_caption) {\n          _this2.setState({\n            post_caption: post_caption\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: \"\" + this.props.route.params.image\n        },\n        style: styles.myImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.postContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.loginContainer,\n        onPress: this.post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.postText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, \"Post\"))));\n    }\n  }]);\n\n  return Save;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  myImage: {\n    height: 400,\n    width: \"100%\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 16,\n    paddingLeft: 10\n  },\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  postText: {\n    color: AppStyles.color.white,\n    fontSize: 15\n  },\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\nexport default Save;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/Save.js"],"names":["React","NavigationContainer","AppStyles","Save","props","post","data","FormData","append","route","params","image","state","post_caption","fetch","method","body","then","res","json","alert","catch","err","styles","input","setState","uri","myImage","postContainer","loginContainer","postText","Component","StyleSheet","create","height","width","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingTop","fontSize","paddingLeft","myHeader","paddingBottom","backgroundColor","buttonWidth","main","color","tint","borderRadius","padding","alignItems","white","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View,Text, TextInput, Image, Button,StyleSheet,TouchableOpacity } from 'react-native'\n\n//import firebase from 'firebase'\nimport { NavigationContainer } from '@react-navigation/native'\n//require(\"firebase/firestore\")\n//require(\"firebase/firebase-storage\")\nimport { AppStyles}  from \"../AppStyles\";\n\n\n\nclass Save extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            post_caption:\"\"\n        }\n\n    }\n\n\n    post=()=>{\n        const data=new FormData();\n        data.append(\"post_media\",this.props.route.params.image);\n        data.append(\"post_caption\",this.state.post_caption);\n\n        fetch(\"http://31f67e651a81.ngrok.io/code_reservoir/create_post.php\",\n        {\n            method:\"POST\",\n            'Content-Type' : 'application/json',\n            body:data\n        }\n        )\n        .then(res=>res.json())\n        .then(data=>alert(\"Image Uploaded\"))\n        .catch(err=>alert(err))\n       // alert(this.props.route.params.image)\n    }\n  \n    \n    render(){\n        return(\n        <View>\n           \n                <TextInput\n                placeholder=\"Write a Caption . . .\"\n                style={styles.input}\n                onChangeText={(post_caption)=>{this.setState({post_caption})}}\n            />\n            <Image source={{uri:`${this.props.route.params.image}`}} style={styles.myImage}/>\n             <View style={styles.postContainer}>\n            <TouchableOpacity style={styles.loginContainer} onPress={this.post}>\n          <Text style={styles.postText}>Post</Text>\n          </TouchableOpacity>\n            </View>\n        </View>\n        )\n    }\n}\n\nconst styles=StyleSheet.create({\n    myImage:{\n       height:400,\n       width:\"100%\",\n       borderBottomLeftRadius:10,\n       borderBottomRightRadius:10\n\n    },\n    input:{\n        marginTop:100,\n        paddingTop:20,\n        fontSize:16,\n        paddingLeft:10\n    },\n\n    myHeader:{\n        width:\"100%\",\n        paddingTop:40,\n        paddingBottom:30,\n        backgroundColor:\"#fff\"\n    },\n    loginContainer: {\n        width: AppStyles.buttonWidth.main,\n        backgroundColor: AppStyles.color.tint,\n        borderRadius: AppStyles.borderRadius.main,\n        padding: 10,\n        marginTop: 30,\n        alignItems:\"center\",\n      },\n\n      postText:{\n        color: AppStyles.color.white,\n        fontSize:15\n      },\n      postContainer:{\n          display:\"flex\",\n          alignItems:\"center\"\n      }\n})\n\nexport default Save;\n"]},"metadata":{},"sourceType":"module"}