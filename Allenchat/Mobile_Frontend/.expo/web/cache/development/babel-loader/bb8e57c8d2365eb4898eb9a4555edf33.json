{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport AddStack from \"../Navigation/AddStack\";\n\nvar NewPostScreen = function (_React$Component) {\n  _inherits(NewPostScreen, _React$Component);\n\n  var _super = _createSuper(NewPostScreen);\n\n  function NewPostScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewPostScreen);\n\n    _this = _super.call(this, props);\n\n    _this.make_post = function () {\n      alert(\"hey\");\n    };\n\n    _this.state = {\n      post_caption: \"\"\n    };\n    _this.make_post = _this.make_post.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewPostScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var image = this.props.route.params.image.image;\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        multiline: true,\n        placeholder: \"Write a Caption . . .\",\n        style: styles.input,\n        onChangeText: function onChangeText(post_caption) {\n          _this2.setState({\n            post_caption: post_caption\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), React.createElement(Image, {\n        source: {\n          uri: \"\" + this.props.route.params.image\n        },\n        style: styles.myImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.postContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      }), React.createElement(AddStack, {\n        create_post: this.make_post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return NewPostScreen;\n}(React.Component);\n\nexport { NewPostScreen as default };\nvar styles = StyleSheet.create({\n  myImage: {\n    height: 400,\n    width: \"100%\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    marginTop: 10\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js"],"names":["Ionicons","React","HeaderButtons","AddStack","NewPostScreen","props","make_post","alert","state","post_caption","bind","image","route","params","styles","input","setState","uri","myImage","postContainer","Component","StyleSheet","create","height","width","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingTop","fontSize","paddingLeft","myHeader","paddingBottom","backgroundColor","display","alignItems"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,QAAP;;IAKqBC,a;;;;;AAEnB,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAUpBC,SAVoB,GAUV,YAAI;AAeVC,MAAAA,KAAK,CAAC,KAAD,CAAL;AAEH,KA3BmB;;AAEhB,UAAKC,KAAL,GAAW;AACPC,MAAAA,YAAY,EAAC;AADN,KAAX;AAGA,UAAKH,SAAL,GAAiB,MAAKA,SAAL,CAAeI,IAAf,+BAAjB;AALgB;AAOnB;;;;6BAwBU;AAAA;;AAAA,UACCC,KADD,GACW,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF,KADnC,CACCA,KADD;AAEP,aACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,WAAW,EAAC,uBAFhB;AAGI,QAAA,KAAK,EAAEG,MAAM,CAACC,KAHlB;AAII,QAAA,YAAY,EAAE,sBAACN,YAAD,EAAgB;AAAC,UAAA,MAAI,CAACO,QAAL,CAAc;AAACP,YAAAA,YAAY,EAAZA;AAAD,WAAd;AAA8B,SAJjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAUI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACQ,UAAAA,GAAG,OAAI,KAAKZ,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF;AAAhC,SAAf;AAAyD,QAAA,KAAK,EAAEG,MAAM,CAACI,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAWS,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXT,EAcC,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKb,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdD,CADE,CADF;AAsBD;;;;EAzDwCL,KAAK,CAACmB,S;;SAA5BhB,a;AA+DrB,IAAMU,MAAM,GAACO,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,OAAO,EAAC;AACLK,IAAAA,MAAM,EAAC,GADF;AAELC,IAAAA,KAAK,EAAC,MAFD;AAGLC,IAAAA,sBAAsB,EAAC,EAHlB;AAILC,IAAAA,uBAAuB,EAAC,EAJnB;AAKLC,IAAAA,SAAS,EAAC;AALL,GADqB;AAS7BZ,EAAAA,KAAK,EAAC;AACFY,IAAAA,SAAS,EAAC,GADR;AAEFC,IAAAA,UAAU,EAAC,EAFT;AAGFC,IAAAA,QAAQ,EAAC,EAHP;AAIFC,IAAAA,WAAW,EAAC;AAJV,GATuB;AAgB7BC,EAAAA,QAAQ,EAAC;AACLP,IAAAA,KAAK,EAAC,MADD;AAELI,IAAAA,UAAU,EAAC,EAFN;AAGLI,IAAAA,aAAa,EAAC,EAHT;AAILC,IAAAA,eAAe,EAAC;AAJX,GAhBoB;AAwB3Bd,EAAAA,aAAa,EAAC;AACVe,IAAAA,OAAO,EAAC,MADE;AAEVC,IAAAA,UAAU,EAAC;AAFD;AAxBa,CAAlB,CAAb","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport { Image, TextInput, View,StyleSheet,ScrollView } from 'react-native';\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport AddStack from '../Navigation/AddStack';\n\n\n//import Fire from '../Fire';\n\nexport default class NewPostScreen extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state={\n        post_caption:\"\"\n    }\n    this.make_post = this.make_post.bind(this);\n \n}\n\n\nmake_post=()=>{\n /*   const data=new FormData();\n    data.append(\"post_media\",this.props.route.params.image);\n    data.append(\"post_caption\",this.state.post_caption);\n\n    fetch(\"http://31f67e651a81.ngrok.io/code_reservoir/create_post.php\",\n    {\n        method:\"POST\",\n        'Content-Type' : 'application/json',\n        body:data\n    }\n    )\n    .then(res=>res.json())\n    .then(data=>alert(\"Image Uploaded\"))\n    .catch(err=>alert(err))*/\n    alert(\"hey\")\n   // alert(this.props.route.params.image)\n}\n\n  //state = { text: '' };\n\n  render() {\n    const { image } = this.props.route.params.image;\n    return (\n      <ScrollView>\n    <View>\n    \n        <View>\n            <TextInput\n                multiline\n                placeholder=\"Write a Caption . . .\"\n                style={styles.input}\n                onChangeText={(post_caption)=>{this.setState({post_caption})}}\n            />\n            </View>\n        <Image source={{uri:`${this.props.route.params.image}`}} style={styles.myImage}/>\n             <View style={styles.postContainer}>\n          \n          </View>\n     <AddStack create_post={this.make_post}/>\n\n      </View>\n\n      </ScrollView>\n    );\n  }\n}\n\n\n\n\nconst styles=StyleSheet.create({\n  myImage:{\n     height:400,\n     width:\"100%\",\n     borderBottomLeftRadius:10,\n     borderBottomRightRadius:10,\n     marginTop:10\n\n  },\n  input:{\n      marginTop:100,\n      paddingTop:20,\n      fontSize:20,\n      paddingLeft:10\n  },\n\n  myHeader:{\n      width:\"100%\",\n      paddingTop:40,\n      paddingBottom:30,\n      backgroundColor:\"#fff\"\n  },\n \n\n    postContainer:{\n        display:\"flex\",\n        alignItems:\"center\"\n    }\n})\n"]},"metadata":{},"sourceType":"module"}