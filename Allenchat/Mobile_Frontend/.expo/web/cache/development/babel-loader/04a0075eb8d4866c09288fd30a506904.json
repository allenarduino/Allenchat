{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BottomTab from \"../Navigation/BottomNav\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport SwitchNav from \"../Navigation/SwitchNavOne\";\nimport { AuthContext } from \"../App\";\nimport { AppStyles } from \"../AppStyles\";\nvar validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var initialState = {\n    email: \"\",\n    password: \"\",\n    email_is_valid: true,\n    error: \"\",\n    emailerr: \"\",\n    passworderr: \"\"\n  };\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      dispatch = _React$useContext.dispatch;\n\n  emailInputchange = function emailInputchange(val) {\n    if (validEmailRegex.test(val)) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email_is_valid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email_is_valid: false\n        });\n      });\n    }\n  };\n\n  passwordInputchange = function passwordInputchange(val) {\n    if (val.trim().length >= 6) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password_is_valid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password_is_valid: false\n        });\n      });\n    }\n  };\n\n  login = function login() {\n    var data = new FormData();\n    data.append(\"email\", state.email);\n    data.append(\"password\", state.password);\n\n    if (state.email_is_valid == true && !state.email.trim().length == 0 && !state.password.trim().length == 0) {\n      fetch(\"http://e7f46440712b.ngrok.io/merllon_mall/customer_login.php\", {\n        method: \"POST\",\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.error == null) {\n          dispatch({\n            type: \"LOGIN\",\n            payload: data\n          });\n          navigation.navigate(\"BottomTab\");\n        } else {\n          setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              error: data.error\n            });\n          });\n        }\n      }).catch(function (err) {\n        alert(err);\n      });\n    } else {\n      alert(\"Form is invalid\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, styles.leftTitle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), React.createElement(View, {\n    style: styles.InputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.body,\n    placeholder: \"E-mail or phone number\",\n    onChangeText: function onChangeText(email) {\n      emailInputchange(email);\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: email\n        });\n      });\n    },\n    value: state.email,\n    placeholderTextColor: AppStyles.color.grey,\n    underlineColorAndroid: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), state.email_is_valid == false ? React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontSize: 14\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 39\n    }\n  }, \"Please your email is not valid\") : null, React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, state.emailerr), React.createElement(View, {\n    style: styles.InputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.body,\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(password) {\n      return setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password: password\n        });\n      });\n    },\n    value: state.password,\n    placeholderTextColor: AppStyles.color.grey,\n    underlineColorAndroid: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, state.error), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 20\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"LoginScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"rgb(95, 32, 155)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }, \"Forgot password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginContainer,\n    onPress: login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Log in\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 20\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"rgb(95, 32, 155)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 10\n    }\n  }, \"Not a member?\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  myButton: {\n    backgroundColor: \"red\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: AppStyles.color.white,\n    fontSize: 15\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/LoginScreen.js"],"names":["React","BottomTab","AsyncStorage","SwitchNav","AuthContext","AppStyles","validEmailRegex","RegExp","LoginScreen","navigation","initialState","email","password","email_is_valid","error","emailerr","passworderr","useState","state","setState","useContext","dispatch","emailInputchange","val","test","prevState","passwordInputchange","trim","length","password_is_valid","login","data","FormData","append","fetch","method","body","then","res","json","type","payload","navigate","catch","err","alert","styles","container","title","leftTitle","InputContainer","color","grey","fontSize","marginTop","loginContainer","loginText","StyleSheet","create","flex","alignItems","or","fontFamily","fontName","main","marginBottom","fontWeight","tint","alignSelf","textAlign","marginLeft","content","paddingLeft","paddingRight","text","myButton","backgroundColor","width","buttonWidth","borderRadius","padding","white","placeholder","textInputWidth","borderWidth","borderStyle","borderColor","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\nTouchableOpacity,\nText,\nView,\nStyleSheet,\nTextInput,\n\n\n} from 'react-native';\nimport BottomTab from '../Navigation/BottomNav';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport SwitchNav from '../Navigation/SwitchNavOne';\nimport {AuthContext} from '../App';\nimport { AppStyles}  from \"../AppStyles\";\n\n\n\n\n//I'm using this for email validation\nconst validEmailRegex= \nRegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n\nconst LoginScreen=({navigation})=>{\n\nconst initialState={\n  email:\"\",\n  password:\"\",\n  email_is_valid:true,\n  error:\"\",//Error from server\n  emailerr:\"\",\n  passworderr:\"\",\n}\n\n\nconst [state,setState]=React.useState(initialState);\nconst  {dispatch}=React.useContext(AuthContext);\n\n\nemailInputchange=(val)=>{\n    if(validEmailRegex.test(val)){\n        setState(prevState=>({\n          ...prevState,\n          email_is_valid:true\n        }))\n        \n    }\n    else{\n        setState(prevState=>({\n          ...prevState,\n          email_is_valid:false,\n        }))\n    }\n  \n }\n\n passwordInputchange=(val)=>{\n    if(val.trim().length>=6){\n       setState(prevState=>({\n         ...prevState,\n         password_is_valid:true,\n       }))\n        \n    }\n    else{\n       setState(prevState=>({\n         ...prevState,\n         password_is_valid:false,\n       }))\n    }\n  \n }\n\n\n\n\n\n\n\nlogin=()=>{\n    const data=new FormData();\n    data.append(\"email\",state.email)\n    data.append(\"password\",state.password)\n\n    if(\n        state.email_is_valid==true&&\n    !state.email.trim().length==0&&!state.password.trim().length==0){\n\n        fetch(\"http://e7f46440712b.ngrok.io/merllon_mall/customer_login.php\",{\n            method:\"POST\",\n            body:data,\n         \n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if (data.error==null){\n            \n               dispatch({\n                 type:\"LOGIN\",\n                 payload:data\n               })\n                navigation.navigate(\"BottomTab\");\n             \n            }\n            else{\n                setState(prevState=>({\n                  ...prevState,\n                  error:data.error\n                }))\n            }\n        }).catch((err)=>{alert(err)});\n          \n\n}\nelse{\n    alert(\"Form is invalid\")\n}\n\n    \n}\n\n    return(\n        <View style={styles.container}>\n        <Text style={[styles.title, styles.leftTitle]}>Sign In</Text>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"E-mail or phone number\"\n            onChangeText={(email)=>{emailInputchange(email);setState(prevState=>({...prevState,email}))}}\n            value={state.email}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {state.email_is_valid==false? <Text style={{color:\"red\",fontSize:14}}>Please your email is not valid</Text>:null}\n        <Text style={{color:\"red\",fontSize:15}}>{state.emailerr}</Text>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            secureTextEntry={true}\n            placeholder=\"Password\"\n            onChangeText={(password)=>setState(prevState=>({...prevState,password}))}\n            value={state.password}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        <Text style={{color:\"red\",fontSize:15}}>{state.error}</Text>\n    \n        <TouchableOpacity style={{marginTop:20}}  onPress={()=>navigation.navigate(\"LoginScreen\")}>\n         <Text style={{color:\"rgb(95, 32, 155)\"}}>Forgot password?</Text>\n      </TouchableOpacity>\n    \n        <TouchableOpacity style={styles.loginContainer} onPress={login}>\n          <Text style={styles.loginText}>Log in</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={{marginTop:20}} onPress={()=>navigation.navigate(\"SignupScreen\")}>\n         <Text style={{color:\"rgb(95, 32, 155)\"}}>Not a member?</Text>\n       </TouchableOpacity>\n     \n      </View>\n    )\n}\n\n\nexport default LoginScreen;\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    or: {\n      fontFamily: AppStyles.fontName.main,\n      color: \"black\",\n      marginTop: 40,\n      marginBottom: 10\n    },\n    title: {\n      fontSize: AppStyles.fontSize.title,\n      fontWeight: \"bold\",\n      color: AppStyles.color.tint,\n      marginTop: 50,\n      marginBottom: 20\n    },\n    leftTitle: {\n      alignSelf: \"stretch\",\n      textAlign: \"left\",\n      marginLeft: 20\n    },\n    content: {\n      paddingLeft: 50,\n      paddingRight: 50,\n      textAlign: \"center\",\n      fontSize: AppStyles.fontSize.content,\n      color: AppStyles.color.text\n    },\n    myButton:{\n      backgroundColor:\"red\"\n    },\n    loginContainer: {\n      width: AppStyles.buttonWidth.main,\n      backgroundColor: AppStyles.color.tint,\n      borderRadius: AppStyles.borderRadius.main,\n      padding: 10,\n      marginTop: 30,\n      alignItems:\"center\",\n    },\n    loginText: {\n      color: AppStyles.color.white,\n      fontSize:15\n    },\n    placeholder: {\n      fontFamily: AppStyles.fontName.text,\n      color: \"red\"\n    },\n    InputContainer: {\n      width: AppStyles.textInputWidth.main,\n      marginTop: 30,\n      borderWidth: 1,\n      borderStyle: \"solid\",\n      borderColor: AppStyles.color.grey,\n      borderRadius: AppStyles.borderRadius.main\n    },\n    body: {\n      height: 42,\n      paddingLeft: 20,\n      paddingRight: 20,\n      color: AppStyles.color.text\n    },\n   \n  });\n\n/*\nconst mapStateToProps = (state) => {\n    return { token: state.token,}\n };\n\n  \n\nconst mapDispatchToProps = dispatch => ({\n    login:dispatch(login)\n});\n\n export default connect(mapStateToProps,mapDispatchToProps)(Login);\n*/"]},"metadata":{},"sourceType":"module"}