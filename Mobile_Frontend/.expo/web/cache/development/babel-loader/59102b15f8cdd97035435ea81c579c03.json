{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport { Header } from 'react-native-elements';\nimport { AuthContext } from \"../App\";\nexport var NewPostScreen = function NewPostScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var MyContext = React.createContext(MyContext);\n\n  var _React$useContext = React.useContext(AuthContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var initialState = {\n    post_caption: null,\n    post_media: \"\"\n  };\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mystate = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var make_post = function make_post() {\n    var uri = route.params.image;\n    var uriParts = route.params.image.split('.');\n    var filename = uri.split('/').pop();\n    var fileType = uriParts[uriParts.length - 1];\n    var data = new FormData();\n    data.append(\"post_media\", {\n      uri: uri,\n      name: \"\" + filename,\n      type: \"image/\" + fileType\n    });\n    data.append(\"post_caption\", mystate.post_caption);\n    data.append(\"token\", state.token);\n    fetch(\"http://51efe3c34510.ngrok.io/code_reservoir/create_post.php\", {\n      method: \"POST\",\n      body: data,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return alert(\"Post Created\");\n    }).catch(function (err) {\n      return alert(err);\n    });\n  };\n\n  var image = route.params.image;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }\n  }, React.createElement(Header, {\n    placement: \"left\",\n    leftComponent: React.createElement(Icon, {\n      name: \"close-outline\",\n      size: 35,\n      color: \"black\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }),\n    rightComponent: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return make_post();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, React.createElement(Icon, {\n      name: \"checkmark-circle-outline\",\n      size: 35,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 63\n      }\n    })),\n    containerStyle: {\n      backgroundColor: '#fff',\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Write a Caption . . .\",\n    style: styles.input,\n    onChangeText: function onChangeText(post_caption) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          post_caption: post_caption\n        });\n      });\n    },\n    value: mystate.post_caption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), React.createElement(Image, {\n    source: {\n      uri: \"\" + route.params.image\n    },\n    style: styles.myImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.postContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 14\n    }\n  }))));\n};\nexport default NewPostScreen;\nvar styles = StyleSheet.create({\n  myImage: {\n    height: 400,\n    width: \"100%\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    marginTop: 10\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  postButton: {\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 70,\n    height: 30,\n    borderColor: \"#333\",\n    color: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js"],"names":["Icon","React","AsyncStorage","HeaderButtons","Header","AuthContext","NewPostScreen","route","navigation","MyContext","createContext","useContext","state","dispatch","initialState","post_caption","post_media","useState","mystate","setState","make_post","uri","params","image","uriParts","split","filename","pop","fileType","length","data","FormData","append","name","type","token","fetch","method","body","headers","then","res","json","alert","catch","err","goBack","backgroundColor","height","styles","input","prevState","myImage","postContainer","StyleSheet","create","width","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingTop","fontSize","paddingLeft","myHeader","paddingBottom","display","alignItems","postButton","borderWidth","borderRadius","borderColor","color","justifyContent"],"mappings":"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","sourcesContent":["import Icon from 'react-native-vector-icons/Ionicons';\nimport React from 'react';\nimport { Image, TextInput,Text, View,\n  StyleSheet,\n  ScrollView,\nTouchableOpacity} from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport {Header} from 'react-native-elements';\nimport {AuthContext} from '../App';\n\n//import Fire from '../Fire';\n\n\n\n\nexport const NewPostScreen=({route, navigation})=>{\n\nconst MyContext=React.createContext(MyContext);\nconst {state,dispatch}=React.useContext(AuthContext);\nconst initialState={\n  post_caption:null,\n  post_media:\"\",\n}\n  const [mystate,setState]=React.useState(initialState);\n\n\nconst make_post=()=>{\n    let uri=route.params.image\n    let uriParts = route.params.image.split('.');\n    let filename = uri.split('/').pop();\n    let fileType = uriParts[uriParts.length - 1];\n    const data=new FormData();\n    data.append(\"post_media\",{\n      uri,\n      name: `${filename}`,\n      type: `image/${fileType}`,\n    });\n   data.append(\"post_caption\",mystate.post_caption);\n   data.append(\"token\",state.token);\n\n    fetch(\"http://51efe3c34510.ngrok.io/code_reservoir/create_post.php\",\n    {\n        method:\"POST\",\n        body:data,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    }\n    )\n    .then(res=>res.json())\n    .then(data=>alert(\"Post Created\"))\n    .catch(err=>alert(err))\n \n    \n \n  \n}\n\n\n\n\n\n\n  //state = { text: '' };\n\n    const { image } = route.params;\n    return (\n    \n<View>\n<Header\n  placement=\"left\"\n  leftComponent= {<Icon name='close-outline' size={35} color=\"black\" onPress={()=>navigation.goBack()}/>}\n  rightComponent={<TouchableOpacity onPress={()=>make_post()}><Icon name=\"checkmark-circle-outline\"\n  size={35} color=\"black\"/></TouchableOpacity>}\n  containerStyle={{\n    backgroundColor: '#fff',\n    //justifyContent: 'space-around',\n    height:100\n  }}\n/>\n      <ScrollView>\n\n    \n    <View>\n    \n        <View>\n            <TextInput\n               // multiline\n                placeholder=\"Write a Caption . . .\"\n                style={styles.input}\n                onChangeText={(post_caption)=>{setState(prevState=>({...prevState,post_caption}))}}\n                value={mystate.post_caption}\n            />\n            </View>\n        <Image source={{uri:`${route.params.image}`}} style={styles.myImage}/>\n             <View style={styles.postContainer}>\n          \n          </View>\n         \n      </View>\n      \n\n      </ScrollView>\n      </View>\n      \n    );\n  }\n\n  export default NewPostScreen;\n\n\n\n\nconst styles=StyleSheet.create({\n  myImage:{\n     height:400,\n     width:\"100%\",\n     borderBottomLeftRadius:10,\n     borderBottomRightRadius:10,\n     marginTop:10\n\n  },\n  input:{\n      marginTop:100,\n      paddingTop:20,\n      fontSize:20,\n      paddingLeft:10\n  },\n\n  myHeader:{\n      width:\"100%\",\n      paddingTop:40,\n      paddingBottom:30,\n      backgroundColor:\"#fff\"\n  },\n \n\n    postContainer:{\n        display:\"flex\",\n        alignItems:\"center\"\n    },\n    postButton:{\n      backgroundColor:\"#fff\",\n      borderWidth:1,\n      borderRadius:10,\n      width:70,\n      height:30,\n      borderColor:\"#333\",\n      color:\"#fff\",\n      display:\"flex\",\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    }\n})\n"]},"metadata":{},"sourceType":"module"}