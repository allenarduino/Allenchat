{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport HeaderButtons from 'react-navigation-header-buttons';\n\nvar NewPostScreen = function (_React$Component) {\n  _inherits(NewPostScreen, _React$Component);\n\n  var _super = _createSuper(NewPostScreen);\n\n  function NewPostScreen() {\n    var _this;\n\n    _classCallCheck(this, NewPostScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewPostScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var image = this.props.route.params.image.image;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Write a Caption . . .\",\n        style: styles.input,\n        onChangeText: function onChangeText(post_caption) {\n          _this2.setState({\n            post_caption: post_caption\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      })), React.createElement(Image, {\n        source: {\n          uri: \"\" + this.props.route.params.image\n        },\n        style: styles.myImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.postContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }));\n    }\n  }]);\n\n  return NewPostScreen;\n}(React.Component);\n\nNewPostScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: 'New Post',\n    headerRight: React.createElement(HeaderButtons, {\n      IconComponent: Ionicons,\n      iconSize: 23,\n      color: \"black\",\n      __self: NewPostScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, React.createElement(HeaderButtons.Item, {\n      title: \"Share\",\n      onPress: function onPress() {\n        alert('Need valid description');\n      },\n      __self: NewPostScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nexport { NewPostScreen as default };\nvar styles = StyleSheet.create({\n  myImage: {\n    height: 400,\n    width: \"100%\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    marginTop: 100\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 16,\n    paddingLeft: 10\n  },\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/Screens/NewPostScreen.js"],"names":["Ionicons","React","HeaderButtons","NewPostScreen","state","text","image","props","route","params","styles","input","post_caption","setState","uri","myImage","postContainer","Component","navigationOptions","navigation","title","headerRight","alert","StyleSheet","create","height","width","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingTop","fontSize","paddingLeft","myHeader","paddingBottom","backgroundColor","display","alignItems"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport { Image, TextInput, View,StyleSheet } from 'react-native';\nimport HeaderButtons from 'react-navigation-header-buttons';\n\n//import Fire from '../Fire';\n\nexport default class NewPostScreen extends React.Component{\n  static navigationOptions = ({ navigation }) => ({\n    title: 'New Post',\n    headerRight: (\n      <HeaderButtons IconComponent={Ionicons} iconSize={23} color=\"black\">\n        <HeaderButtons.Item\n          title=\"Share\"\n          onPress={() => {\n            //const text = navigation.getParam('text');\n            //const image = navigation.getParam('image');\n           // if (text && image) {\n           //   navigation.goBack();\n           //   Fire.shared.post({ text: text.trim(), image });\n           // } else {\n              alert('Need valid description');\n           // }\n          }}\n        />\n      </HeaderButtons>\n    ),\n  });\n\n  state = { text: '' };\n\n  render() {\n    const { image } = this.props.route.params.image;\n    return (\n    <View>\n        <View>\n            <TextInput\n                placeholder=\"Write a Caption . . .\"\n                style={styles.input}\n                onChangeText={(post_caption)=>{this.setState({post_caption})}}\n            />\n            </View>\n        <Image source={{uri:`${this.props.route.params.image}`}} style={styles.myImage}/>\n             <View style={styles.postContainer}>\n          \n          </View>\n     \n      </View>\n    );\n  }\n}\n\n\n\n\nconst styles=StyleSheet.create({\n  myImage:{\n     height:400,\n     width:\"100%\",\n     borderBottomLeftRadius:10,\n     borderBottomRightRadius:10,\n     marginTop:100\n\n  },\n  input:{\n      marginTop:100,\n      paddingTop:20,\n      fontSize:16,\n      paddingLeft:10\n  },\n\n  myHeader:{\n      width:\"100%\",\n      paddingTop:40,\n      paddingBottom:30,\n      backgroundColor:\"#fff\"\n  },\n \n\n    postContainer:{\n        display:\"flex\",\n        alignItems:\"center\"\n    }\n})\n"]},"metadata":{},"sourceType":"module"}