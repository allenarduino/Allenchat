{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  var navigation = _ref.navigation,\n      focusedListeners = _ref.focusedListeners;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      addListener = _React$useContext.addListener;\n\n  var listener = React.useCallback(function (callback) {\n    if (navigation.isFocused()) {\n      for (var _iterator = focusedListeners, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var _listener2 = _ref2;\n\n        var _listener3 = _listener2(callback),\n            _handled = _listener3.handled,\n            _result = _listener3.result;\n\n        if (_handled) {\n          return {\n            handled: _handled,\n            result: _result\n          };\n        }\n      }\n\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(function () {\n    return addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener);\n  }, [addListener, listener]);\n}","map":{"version":3,"sources":["useFocusedListenersChildrenAdapter.tsx"],"names":["focusedListeners","addListener","React","listener","callback","navigation","result","handled"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,wBAAA;AAcA,eAAe,SAAA,kCAAA,OAGH;AAAA,MAH+C,UAG/C,QAH+C,UAG/C;AAAA,MADVA,gBACU,QADVA,gBACU;;AAAA,0BACcE,KAAK,CAALA,UAAAA,CAAxB,wBAAwBA,CADd;AAAA,MACFD,WADE,qBACFA,WADE;;AAGV,MAAME,QAAQ,GAAG,KAAK,CAAL,WAAA,CACdC,UAAAA,QAAD,EAA8C;AAC5C,QAAIC,UAAU,CAAd,SAAIA,EAAJ,EAA4B;AAC1B,2BAAA,gBAAA,kHAAyC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAzC,UAAyC;;AAAA,yBACXF,UAAQ,CAApC,QAAoC,CADG;AAAA,YACjC,QADiC,cACjC,OADiC;AAAA,YACtBG,OADsB,cACtBA,MADsB;;AAGvC,YAAA,QAAA,EAAa;AACX,iBAAO;AAAEC,YAAAA,OAAF,EAAEA,QAAF;AAAWD,YAAAA,MAAAA,EAAAA;AAAX,WAAP;AACD;AACF;;AAED,aAAO;AAAEC,QAAAA,OAAO,EAAT,IAAA;AAAiBD,QAAAA,MAAM,EAAEF,QAAQ,CAAA,UAAA;AAAjC,OAAP;AATF,KAAA,MAUO;AACL,aAAO;AAAEG,QAAAA,OAAO,EAAT,KAAA;AAAkBD,QAAAA,MAAM,EAAE;AAA1B,OAAP;AACD;AAdY,GAAA,EAgBf,CAAA,gBAAA,EAhBF,UAgBE,CAhBe,CAAjB;AAmBAJ,EAAAA,KAAK,CAALA,SAAAA,CAAgB;AAAA,WAAMD,WAAN,KAAA,IAAMA,IAAAA,WAAN,KAAA,KAAA,CAAMA,GAAN,KAAA,CAAMA,GAAAA,WAAW,CAAA,OAAA,EAAjCC,QAAiC,CAAjB;AAAA,GAAhBA,EAAwD,CAAA,WAAA,EAAxDA,QAAwD,CAAxDA;AAID","sourcesContent":["import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  FocusedNavigationCallback,\n  FocusedNavigationListener,\n} from './NavigationBuilderContext';\nimport type { NavigationHelpers } from './types';\n\ntype Options = {\n  navigation: NavigationHelpers<ParamListBase>;\n  focusedListeners: FocusedNavigationListener[];\n};\n\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter({\n  navigation,\n  focusedListeners,\n}: Options) {\n  const { addListener } = React.useContext(NavigationBuilderContext);\n\n  const listener = React.useCallback(\n    (callback: FocusedNavigationCallback<any>) => {\n      if (navigation.isFocused()) {\n        for (const listener of focusedListeners) {\n          const { handled, result } = listener(callback);\n\n          if (handled) {\n            return { handled, result };\n          }\n        }\n\n        return { handled: true, result: callback(navigation) };\n      } else {\n        return { handled: false, result: null };\n      }\n    },\n    [focusedListeners, navigation]\n  );\n\n  React.useEffect(() => addListener?.('focus', listener), [\n    addListener,\n    listener,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}