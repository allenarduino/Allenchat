{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport SwitchNavOne from \"./Navigation/SwitchNavOne\";\nimport SwitchNavTwo from \"./Navigation/SwitchNavTwo\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BottomTab from \"./Navigation/BottomNav\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport MainStackNavigatorOne from \"./Navigation/StackNavigationOne\";\nimport { createAppContainer } from 'react-navigation';\nimport AsyncStorage from '@react-native-community/async-storage';\nexport var AuthContext = React.createContext();\nconsole.disableYellowBox = true;\n\nvar App = function App() {\n  var initialState = {\n    isAuthenticated: false,\n    token: null,\n    isLoading: true\n  };\n\n  var ReducerFunction = function ReducerFunction(prevState, action) {\n    switch (action.type) {\n      case \"LOGIN\":\n        AsyncStorage.setItem(\"token\", action.payload);\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isAuthenticated: true,\n          token: action.payload,\n          isLoading: false\n        });\n\n      case \"LOGOUT\":\n        AsyncStorage.removeItem(\"token\");\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isAuthenticated: false,\n          token: null\n        });\n\n      default:\n        return prevState;\n    }\n\n    ;\n  };\n\n  var bootstrapAsync = function bootstrapAsync() {\n    var token;\n    return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              dispatch({\n                type: \"LOGIN\",\n                payload: token\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _React$useReducer = React.useReducer(ReducerFunction, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    bootstrapAsync();\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, state.isLoading ? React.createElement(Text, {\n    style: {\n      marginTop: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Loading\") : state.isAuthenticated ? React.createElement(BottomTab, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 39\n    }\n  }) : React.createElement(MainStackNavigatorOne, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 52\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/CodeReservoir/codereservoir/App.js"],"names":["React","SwitchNavOne","SwitchNavTwo","BottomTab","NavigationContainer","MainStackNavigatorOne","createAppContainer","AsyncStorage","AuthContext","createContext","console","disableYellowBox","App","initialState","isAuthenticated","token","isLoading","ReducerFunction","prevState","action","type","setItem","payload","removeItem","bootstrapAsync","getItem","dispatch","useReducer","state","useEffect","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;;;;;;;AAEA,OAAOC,SAAP;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,qBAAP;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAIA,OAAO,IAAMC,WAAW,GAACR,KAAK,CAACS,aAAN,EAAlB;AAGPC,OAAO,CAACC,gBAAR,GAAyB,IAAzB;;AAGA,IAAMC,GAAG,GAAC,SAAJA,GAAI,GAAI;AAEV,MAAMC,YAAY,GAAC;AACfC,IAAAA,eAAe,EAAC,KADD;AAEfC,IAAAA,KAAK,EAAC,IAFS;AAGfC,IAAAA,SAAS,EAAC;AAHK,GAAnB;;AAOA,MAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAACC,SAAD,EAAWC,MAAX,EAAoB;AACtC,YAAOA,MAAM,CAACC,IAAd;AACI,WAAK,OAAL;AACIb,QAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA6BF,MAAM,CAACG,OAApC;AACA,+CACOJ,SADP;AAEIJ,UAAAA,eAAe,EAAC,IAFpB;AAGIC,UAAAA,KAAK,EAACI,MAAM,CAACG,OAHjB;AAIIN,UAAAA,SAAS,EAAC;AAJd;;AAMJ,WAAK,QAAL;AACIT,QAAAA,YAAY,CAACgB,UAAb,CAAwB,OAAxB;AACA,+CACOL,SADP;AAEIJ,UAAAA,eAAe,EAAC,KAFpB;AAGIC,UAAAA,KAAK,EAAC;AAHV;;AAMJ;AACI,eAAOG,SAAP;AAlBR;;AAmBC;AACJ,GArBD;;AAwBA,MAAMM,cAAc,GAAC,SAAfA,cAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCjB,YAAY,CAACkB,OAAb,CAAqB,OAArB,CADD;;AAAA;AACXV,YAAAA,KADW;;AAEjB,gBAAGA,KAAH,EAAS;AACLW,cAAAA,QAAQ,CAAC;AACLN,gBAAAA,IAAI,EAAC,OADA;AAELE,gBAAAA,OAAO,EAACP;AAFH,eAAD,CAAR;AAIH;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAjCU,0BA6CYf,KAAK,CAAC2B,UAAN,CAAiBV,eAAjB,EAAiCJ,YAAjC,CA7CZ;AAAA;AAAA,MA6CJe,KA7CI;AAAA,MA6CEF,QA7CF;;AAiDV1B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,YAAI;AAEnBL,IAAAA,cAAc;AACd,GAHD,EAGE,EAHF;AAMA,SAEI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAALA,KAAD;AAAOF,MAAAA,QAAQ,EAARA;AAAP,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,KAAK,CAACZ,SAAN,GAAgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACc,MAAAA,SAAS,EAAC;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB,GACAF,KAAK,CAACd,eAAN,GAAsB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAAmC,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHvC,CADJ,CAFJ;AAYH,CAnED;;AAqEA,eAAeF,GAAf","sourcesContent":["import * as React from 'react';\n//import 'react-native-gesture-handler';\nimport SwitchNavOne from './Navigation/SwitchNavOne';\nimport SwitchNavTwo from './Navigation/SwitchNavTwo';\nimport { StyleSheet, Text, View,Dimensions,ActivityIndicator,TouchableOpacity } from 'react-native';\nimport BottomTab from './Navigation/BottomNav';\nimport {NavigationContainer} from '@react-navigation/native';\nimport MainStackNavigatorOne from './Navigation/StackNavigationOne';\n//import AuthLoading from './Screens/AuthLoading';\nimport { createAppContainer } from 'react-navigation';\nimport AsyncStorage from '@react-native-community/async-storage';\n\n\n\nexport const AuthContext=React.createContext();\n\n//For disabling the warnings\nconsole.disableYellowBox=true;\n\n\nconst App=()=>{\n \n    const initialState={\n        isAuthenticated:false,\n        token:null,\n        isLoading:true\n    \n    }\n\n    const ReducerFunction=(prevState,action)=>{\n        switch(action.type){\n            case \"LOGIN\":\n                AsyncStorage.setItem(\"token\",action.payload)\n                return{\n                    ...prevState,\n                    isAuthenticated:true,\n                    token:action.payload,\n                    isLoading:false\n                }\n            case \"LOGOUT\":\n                AsyncStorage.removeItem(\"token\")\n                return{\n                    ...prevState,\n                    isAuthenticated:false,\n                    token:null\n                }\n          \n            default:\n                return prevState;\n        };\n    }\n\n\n    const bootstrapAsync=async()=>{\n        const token=await AsyncStorage.getItem(\"token\")\n        if(token){\n            dispatch({\n                type:\"LOGIN\",\n                payload:token\n            })\n        }\n   \n        \n    }\n\n    const[state,dispatch]=React.useReducer(ReducerFunction,initialState);\n\n\n\n    React.useEffect(()=>{\n        \n     bootstrapAsync();\n    },[])\n\n\n    return(\n        \n        <AuthContext.Provider value={{state,dispatch}}>\n            <NavigationContainer>\n            {\n                state.isLoading?<Text style={{marginTop:200}}>Loading</Text>:\n                state.isAuthenticated?<BottomTab/>:<MainStackNavigatorOne/>\n            }\n            </NavigationContainer>\n        </AuthContext.Provider> \n        \n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}